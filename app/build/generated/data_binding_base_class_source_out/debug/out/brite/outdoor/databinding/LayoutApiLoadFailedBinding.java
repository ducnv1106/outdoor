// Generated by view binder compiler. Do not edit!
package brite.outdoor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import brite.outdoor.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutApiLoadFailedBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnRetry;

  @NonNull
  public final ConstraintLayout clRetryRoot;

  @NonNull
  public final TextView tvErrMsg;

  private LayoutApiLoadFailedBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnRetry, @NonNull ConstraintLayout clRetryRoot,
      @NonNull TextView tvErrMsg) {
    this.rootView = rootView;
    this.btnRetry = btnRetry;
    this.clRetryRoot = clRetryRoot;
    this.tvErrMsg = tvErrMsg;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutApiLoadFailedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutApiLoadFailedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_api_load_failed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutApiLoadFailedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRetry;
      AppCompatButton btnRetry = rootView.findViewById(id);
      if (btnRetry == null) {
        break missingId;
      }

      ConstraintLayout clRetryRoot = (ConstraintLayout) rootView;

      id = R.id.tvErrMsg;
      TextView tvErrMsg = rootView.findViewById(id);
      if (tvErrMsg == null) {
        break missingId;
      }

      return new LayoutApiLoadFailedBinding((ConstraintLayout) rootView, btnRetry, clRetryRoot,
          tvErrMsg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
