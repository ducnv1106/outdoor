// Generated by view binder compiler. Do not edit!
package brite.outdoor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import brite.outdoor.R;
import brite.outdoor.ui.widgets.CustomImageButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBookMarkBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView btnMenu;

  @NonNull
  public final CustomImageButton btnShare;

  @NonNull
  public final CustomImageButton btnUnBookMark;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ConstraintLayout clContent;

  @NonNull
  public final ConstraintLayout clInformation;

  @NonNull
  public final ConstraintLayout clRoot;

  @NonNull
  public final Guideline glEndContent;

  @NonNull
  public final Guideline glEndImage;

  @NonNull
  public final Guideline glStartContent;

  @NonNull
  public final ImageView imgLocation;

  @NonNull
  public final ImageView imgPost;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView tvContentPost;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvNamePostedBy;

  @NonNull
  public final TextView tvTitlePost;

  @NonNull
  public final View viewFooter;

  private ItemBookMarkBinding(@NonNull CardView rootView, @NonNull ImageView btnMenu,
      @NonNull CustomImageButton btnShare, @NonNull CustomImageButton btnUnBookMark,
      @NonNull CardView cardView, @NonNull ConstraintLayout clContent,
      @NonNull ConstraintLayout clInformation, @NonNull ConstraintLayout clRoot,
      @NonNull Guideline glEndContent, @NonNull Guideline glEndImage,
      @NonNull Guideline glStartContent, @NonNull ImageView imgLocation, @NonNull ImageView imgPost,
      @NonNull ProgressBar progressBar, @NonNull TextView tvContentPost, @NonNull TextView tvDate,
      @NonNull TextView tvNamePostedBy, @NonNull TextView tvTitlePost, @NonNull View viewFooter) {
    this.rootView = rootView;
    this.btnMenu = btnMenu;
    this.btnShare = btnShare;
    this.btnUnBookMark = btnUnBookMark;
    this.cardView = cardView;
    this.clContent = clContent;
    this.clInformation = clInformation;
    this.clRoot = clRoot;
    this.glEndContent = glEndContent;
    this.glEndImage = glEndImage;
    this.glStartContent = glStartContent;
    this.imgLocation = imgLocation;
    this.imgPost = imgPost;
    this.progressBar = progressBar;
    this.tvContentPost = tvContentPost;
    this.tvDate = tvDate;
    this.tvNamePostedBy = tvNamePostedBy;
    this.tvTitlePost = tvTitlePost;
    this.viewFooter = viewFooter;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBookMarkBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBookMarkBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_book_mark, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBookMarkBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnMenu;
      ImageView btnMenu = rootView.findViewById(id);
      if (btnMenu == null) {
        break missingId;
      }

      id = R.id.btnShare;
      CustomImageButton btnShare = rootView.findViewById(id);
      if (btnShare == null) {
        break missingId;
      }

      id = R.id.btnUnBookMark;
      CustomImageButton btnUnBookMark = rootView.findViewById(id);
      if (btnUnBookMark == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = rootView.findViewById(id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.clContent;
      ConstraintLayout clContent = rootView.findViewById(id);
      if (clContent == null) {
        break missingId;
      }

      id = R.id.clInformation;
      ConstraintLayout clInformation = rootView.findViewById(id);
      if (clInformation == null) {
        break missingId;
      }

      id = R.id.clRoot;
      ConstraintLayout clRoot = rootView.findViewById(id);
      if (clRoot == null) {
        break missingId;
      }

      id = R.id.glEndContent;
      Guideline glEndContent = rootView.findViewById(id);
      if (glEndContent == null) {
        break missingId;
      }

      id = R.id.glEndImage;
      Guideline glEndImage = rootView.findViewById(id);
      if (glEndImage == null) {
        break missingId;
      }

      id = R.id.glStartContent;
      Guideline glStartContent = rootView.findViewById(id);
      if (glStartContent == null) {
        break missingId;
      }

      id = R.id.imgLocation;
      ImageView imgLocation = rootView.findViewById(id);
      if (imgLocation == null) {
        break missingId;
      }

      id = R.id.imgPost;
      ImageView imgPost = rootView.findViewById(id);
      if (imgPost == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.tvContentPost;
      TextView tvContentPost = rootView.findViewById(id);
      if (tvContentPost == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = rootView.findViewById(id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvNamePostedBy;
      TextView tvNamePostedBy = rootView.findViewById(id);
      if (tvNamePostedBy == null) {
        break missingId;
      }

      id = R.id.tvTitlePost;
      TextView tvTitlePost = rootView.findViewById(id);
      if (tvTitlePost == null) {
        break missingId;
      }

      id = R.id.viewFooter;
      View viewFooter = rootView.findViewById(id);
      if (viewFooter == null) {
        break missingId;
      }

      return new ItemBookMarkBinding((CardView) rootView, btnMenu, btnShare, btnUnBookMark,
          cardView, clContent, clInformation, clRoot, glEndContent, glEndImage, glStartContent,
          imgLocation, imgPost, progressBar, tvContentPost, tvDate, tvNamePostedBy, tvTitlePost,
          viewFooter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
