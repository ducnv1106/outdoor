// Generated by view binder compiler. Do not edit!
package brite.outdoor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import brite.outdoor.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogSavePushPostBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout rlContent;

  @NonNull
  public final ConstraintLayout rlRoot;

  @NonNull
  public final TextView tvConfirm;

  @NonNull
  public final TextView tvDiscardPost;

  @NonNull
  public final TextView tvKeepEditing;

  @NonNull
  public final TextView tvSaveDraft;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final View viewLine1;

  @NonNull
  public final View viewLine2;

  @NonNull
  public final View viewLine3;

  private DialogSavePushPostBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout rlContent, @NonNull ConstraintLayout rlRoot,
      @NonNull TextView tvConfirm, @NonNull TextView tvDiscardPost, @NonNull TextView tvKeepEditing,
      @NonNull TextView tvSaveDraft, @NonNull TextView tvTitle, @NonNull View viewLine1,
      @NonNull View viewLine2, @NonNull View viewLine3) {
    this.rootView = rootView;
    this.rlContent = rlContent;
    this.rlRoot = rlRoot;
    this.tvConfirm = tvConfirm;
    this.tvDiscardPost = tvDiscardPost;
    this.tvKeepEditing = tvKeepEditing;
    this.tvSaveDraft = tvSaveDraft;
    this.tvTitle = tvTitle;
    this.viewLine1 = viewLine1;
    this.viewLine2 = viewLine2;
    this.viewLine3 = viewLine3;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSavePushPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSavePushPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_save_push_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSavePushPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout rlContent = (RelativeLayout) rootView;

      id = R.id.rlRoot;
      ConstraintLayout rlRoot = rootView.findViewById(id);
      if (rlRoot == null) {
        break missingId;
      }

      id = R.id.tvConfirm;
      TextView tvConfirm = rootView.findViewById(id);
      if (tvConfirm == null) {
        break missingId;
      }

      id = R.id.tvDiscardPost;
      TextView tvDiscardPost = rootView.findViewById(id);
      if (tvDiscardPost == null) {
        break missingId;
      }

      id = R.id.tvKeepEditing;
      TextView tvKeepEditing = rootView.findViewById(id);
      if (tvKeepEditing == null) {
        break missingId;
      }

      id = R.id.tvSaveDraft;
      TextView tvSaveDraft = rootView.findViewById(id);
      if (tvSaveDraft == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = rootView.findViewById(id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.viewLine1;
      View viewLine1 = rootView.findViewById(id);
      if (viewLine1 == null) {
        break missingId;
      }

      id = R.id.viewLine2;
      View viewLine2 = rootView.findViewById(id);
      if (viewLine2 == null) {
        break missingId;
      }

      id = R.id.viewLine3;
      View viewLine3 = rootView.findViewById(id);
      if (viewLine3 == null) {
        break missingId;
      }

      return new DialogSavePushPostBinding((RelativeLayout) rootView, rlContent, rlRoot, tvConfirm,
          tvDiscardPost, tvKeepEditing, tvSaveDraft, tvTitle, viewLine1, viewLine2, viewLine3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
