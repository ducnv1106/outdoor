// Generated by view binder compiler. Do not edit!
package brite.outdoor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import brite.outdoor.R;
import brite.outdoor.ui.widgets.ShowMoreTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemReplyCommentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout btnSeeMore;

  @NonNull
  public final ConstraintLayout clDateAndReply;

  @NonNull
  public final ConstraintLayout clInteractive;

  @NonNull
  public final ImageView imgAvatar;

  @NonNull
  public final ImageView imgComment;

  @NonNull
  public final ImageView imgIcArrowDown;

  @NonNull
  public final ShowMoreTextView tvContentComment;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvDelete;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvReply;

  @NonNull
  public final TextView tvSeeMore;

  @NonNull
  public final TextView tvSending;

  private ItemReplyCommentBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout btnSeeMore, @NonNull ConstraintLayout clDateAndReply,
      @NonNull ConstraintLayout clInteractive, @NonNull ImageView imgAvatar,
      @NonNull ImageView imgComment, @NonNull ImageView imgIcArrowDown,
      @NonNull ShowMoreTextView tvContentComment, @NonNull TextView tvDate,
      @NonNull TextView tvDelete, @NonNull TextView tvName, @NonNull TextView tvReply,
      @NonNull TextView tvSeeMore, @NonNull TextView tvSending) {
    this.rootView = rootView;
    this.btnSeeMore = btnSeeMore;
    this.clDateAndReply = clDateAndReply;
    this.clInteractive = clInteractive;
    this.imgAvatar = imgAvatar;
    this.imgComment = imgComment;
    this.imgIcArrowDown = imgIcArrowDown;
    this.tvContentComment = tvContentComment;
    this.tvDate = tvDate;
    this.tvDelete = tvDelete;
    this.tvName = tvName;
    this.tvReply = tvReply;
    this.tvSeeMore = tvSeeMore;
    this.tvSending = tvSending;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemReplyCommentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemReplyCommentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_reply_comment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemReplyCommentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSeeMore;
      ConstraintLayout btnSeeMore = rootView.findViewById(id);
      if (btnSeeMore == null) {
        break missingId;
      }

      id = R.id.clDateAndReply;
      ConstraintLayout clDateAndReply = rootView.findViewById(id);
      if (clDateAndReply == null) {
        break missingId;
      }

      id = R.id.clInteractive;
      ConstraintLayout clInteractive = rootView.findViewById(id);
      if (clInteractive == null) {
        break missingId;
      }

      id = R.id.imgAvatar;
      ImageView imgAvatar = rootView.findViewById(id);
      if (imgAvatar == null) {
        break missingId;
      }

      id = R.id.imgComment;
      ImageView imgComment = rootView.findViewById(id);
      if (imgComment == null) {
        break missingId;
      }

      id = R.id.imgIcArrowDown;
      ImageView imgIcArrowDown = rootView.findViewById(id);
      if (imgIcArrowDown == null) {
        break missingId;
      }

      id = R.id.tvContentComment;
      ShowMoreTextView tvContentComment = rootView.findViewById(id);
      if (tvContentComment == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = rootView.findViewById(id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvDelete;
      TextView tvDelete = rootView.findViewById(id);
      if (tvDelete == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = rootView.findViewById(id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvReply;
      TextView tvReply = rootView.findViewById(id);
      if (tvReply == null) {
        break missingId;
      }

      id = R.id.tvSeeMore;
      TextView tvSeeMore = rootView.findViewById(id);
      if (tvSeeMore == null) {
        break missingId;
      }

      id = R.id.tvSending;
      TextView tvSending = rootView.findViewById(id);
      if (tvSending == null) {
        break missingId;
      }

      return new ItemReplyCommentBinding((ConstraintLayout) rootView, btnSeeMore, clDateAndReply,
          clInteractive, imgAvatar, imgComment, imgIcArrowDown, tvContentComment, tvDate, tvDelete,
          tvName, tvReply, tvSeeMore, tvSending);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
