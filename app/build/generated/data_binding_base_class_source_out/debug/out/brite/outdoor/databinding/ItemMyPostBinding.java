// Generated by view binder compiler. Do not edit!
package brite.outdoor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.Space;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import brite.outdoor.R;
import brite.outdoor.ui.widgets.CustomLayoutInteractive;
import brite.outdoor.ui.widgets.NoPaddingTextView;
import brite.outdoor.ui.widgets.ProgressView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMyPostBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CustomLayoutInteractive btnComment;

  @NonNull
  public final CustomLayoutInteractive btnLike;

  @NonNull
  public final CustomLayoutInteractive btnShare;

  @NonNull
  public final CardView cardItemMyPost;

  @NonNull
  public final ConstraintLayout clButtonContainer;

  @NonNull
  public final ConstraintLayout clItemNews;

  @NonNull
  public final ConstraintLayout clRoot;

  @NonNull
  public final ConstraintLayout clTitleAndImg;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final Guideline glH7;

  @NonNull
  public final ImageView imgLocation;

  @NonNull
  public final ImageView imgMenu;

  @NonNull
  public final ImageView imgPost;

  @NonNull
  public final LinearLayout layoutDate;

  @NonNull
  public final ProgressView progress;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Space spBottom;

  @NonNull
  public final NoPaddingTextView tvDay;

  @NonNull
  public final NoPaddingTextView tvMonth;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final View viewFooter;

  private ItemMyPostBinding(@NonNull ConstraintLayout rootView,
      @NonNull CustomLayoutInteractive btnComment, @NonNull CustomLayoutInteractive btnLike,
      @NonNull CustomLayoutInteractive btnShare, @NonNull CardView cardItemMyPost,
      @NonNull ConstraintLayout clButtonContainer, @NonNull ConstraintLayout clItemNews,
      @NonNull ConstraintLayout clRoot, @NonNull ConstraintLayout clTitleAndImg,
      @NonNull ConstraintLayout container, @NonNull Guideline glH7, @NonNull ImageView imgLocation,
      @NonNull ImageView imgMenu, @NonNull ImageView imgPost, @NonNull LinearLayout layoutDate,
      @NonNull ProgressView progress, @NonNull ProgressBar progressBar, @NonNull Space spBottom,
      @NonNull NoPaddingTextView tvDay, @NonNull NoPaddingTextView tvMonth,
      @NonNull TextView tvTitle, @NonNull View viewFooter) {
    this.rootView = rootView;
    this.btnComment = btnComment;
    this.btnLike = btnLike;
    this.btnShare = btnShare;
    this.cardItemMyPost = cardItemMyPost;
    this.clButtonContainer = clButtonContainer;
    this.clItemNews = clItemNews;
    this.clRoot = clRoot;
    this.clTitleAndImg = clTitleAndImg;
    this.container = container;
    this.glH7 = glH7;
    this.imgLocation = imgLocation;
    this.imgMenu = imgMenu;
    this.imgPost = imgPost;
    this.layoutDate = layoutDate;
    this.progress = progress;
    this.progressBar = progressBar;
    this.spBottom = spBottom;
    this.tvDay = tvDay;
    this.tvMonth = tvMonth;
    this.tvTitle = tvTitle;
    this.viewFooter = viewFooter;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMyPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMyPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_my_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMyPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnComment;
      CustomLayoutInteractive btnComment = rootView.findViewById(id);
      if (btnComment == null) {
        break missingId;
      }

      id = R.id.btnLike;
      CustomLayoutInteractive btnLike = rootView.findViewById(id);
      if (btnLike == null) {
        break missingId;
      }

      id = R.id.btnShare;
      CustomLayoutInteractive btnShare = rootView.findViewById(id);
      if (btnShare == null) {
        break missingId;
      }

      id = R.id.cardItemMyPost;
      CardView cardItemMyPost = rootView.findViewById(id);
      if (cardItemMyPost == null) {
        break missingId;
      }

      id = R.id.clButtonContainer;
      ConstraintLayout clButtonContainer = rootView.findViewById(id);
      if (clButtonContainer == null) {
        break missingId;
      }

      id = R.id.clItemNews;
      ConstraintLayout clItemNews = rootView.findViewById(id);
      if (clItemNews == null) {
        break missingId;
      }

      id = R.id.clRoot;
      ConstraintLayout clRoot = rootView.findViewById(id);
      if (clRoot == null) {
        break missingId;
      }

      id = R.id.clTitleAndImg;
      ConstraintLayout clTitleAndImg = rootView.findViewById(id);
      if (clTitleAndImg == null) {
        break missingId;
      }

      id = R.id.container;
      ConstraintLayout container = rootView.findViewById(id);
      if (container == null) {
        break missingId;
      }

      id = R.id.glH7;
      Guideline glH7 = rootView.findViewById(id);
      if (glH7 == null) {
        break missingId;
      }

      id = R.id.imgLocation;
      ImageView imgLocation = rootView.findViewById(id);
      if (imgLocation == null) {
        break missingId;
      }

      id = R.id.imgMenu;
      ImageView imgMenu = rootView.findViewById(id);
      if (imgMenu == null) {
        break missingId;
      }

      id = R.id.imgPost;
      ImageView imgPost = rootView.findViewById(id);
      if (imgPost == null) {
        break missingId;
      }

      id = R.id.layoutDate;
      LinearLayout layoutDate = rootView.findViewById(id);
      if (layoutDate == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressView progress = rootView.findViewById(id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.spBottom;
      Space spBottom = rootView.findViewById(id);
      if (spBottom == null) {
        break missingId;
      }

      id = R.id.tvDay;
      NoPaddingTextView tvDay = rootView.findViewById(id);
      if (tvDay == null) {
        break missingId;
      }

      id = R.id.tvMonth;
      NoPaddingTextView tvMonth = rootView.findViewById(id);
      if (tvMonth == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = rootView.findViewById(id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.viewFooter;
      View viewFooter = rootView.findViewById(id);
      if (viewFooter == null) {
        break missingId;
      }

      return new ItemMyPostBinding((ConstraintLayout) rootView, btnComment, btnLike, btnShare,
          cardItemMyPost, clButtonContainer, clItemNews, clRoot, clTitleAndImg, container, glH7,
          imgLocation, imgMenu, imgPost, layoutDate, progress, progressBar, spBottom, tvDay,
          tvMonth, tvTitle, viewFooter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
