// Generated by view binder compiler. Do not edit!
package brite.outdoor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import brite.outdoor.R;
import brite.outdoor.ui.widgets.CustomLayoutInteractive;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMypostShimmerPlaceholderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CustomLayoutInteractive btnComment;

  @NonNull
  public final CustomLayoutInteractive btnLike;

  @NonNull
  public final CustomLayoutInteractive btnShare;

  @NonNull
  public final ConstraintLayout clItemNews;

  @NonNull
  public final ConstraintLayout clTitleAndImg;

  @NonNull
  public final ImageView imgPost;

  @NonNull
  public final View viewFooter;

  private ItemMypostShimmerPlaceholderBinding(@NonNull ConstraintLayout rootView,
      @NonNull CustomLayoutInteractive btnComment, @NonNull CustomLayoutInteractive btnLike,
      @NonNull CustomLayoutInteractive btnShare, @NonNull ConstraintLayout clItemNews,
      @NonNull ConstraintLayout clTitleAndImg, @NonNull ImageView imgPost,
      @NonNull View viewFooter) {
    this.rootView = rootView;
    this.btnComment = btnComment;
    this.btnLike = btnLike;
    this.btnShare = btnShare;
    this.clItemNews = clItemNews;
    this.clTitleAndImg = clTitleAndImg;
    this.imgPost = imgPost;
    this.viewFooter = viewFooter;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMypostShimmerPlaceholderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMypostShimmerPlaceholderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_mypost_shimmer_placeholder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMypostShimmerPlaceholderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnComment;
      CustomLayoutInteractive btnComment = rootView.findViewById(id);
      if (btnComment == null) {
        break missingId;
      }

      id = R.id.btnLike;
      CustomLayoutInteractive btnLike = rootView.findViewById(id);
      if (btnLike == null) {
        break missingId;
      }

      id = R.id.btnShare;
      CustomLayoutInteractive btnShare = rootView.findViewById(id);
      if (btnShare == null) {
        break missingId;
      }

      id = R.id.clItemNews;
      ConstraintLayout clItemNews = rootView.findViewById(id);
      if (clItemNews == null) {
        break missingId;
      }

      id = R.id.clTitleAndImg;
      ConstraintLayout clTitleAndImg = rootView.findViewById(id);
      if (clTitleAndImg == null) {
        break missingId;
      }

      id = R.id.imgPost;
      ImageView imgPost = rootView.findViewById(id);
      if (imgPost == null) {
        break missingId;
      }

      id = R.id.viewFooter;
      View viewFooter = rootView.findViewById(id);
      if (viewFooter == null) {
        break missingId;
      }

      return new ItemMypostShimmerPlaceholderBinding((ConstraintLayout) rootView, btnComment,
          btnLike, btnShare, clItemNews, clTitleAndImg, imgPost, viewFooter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
