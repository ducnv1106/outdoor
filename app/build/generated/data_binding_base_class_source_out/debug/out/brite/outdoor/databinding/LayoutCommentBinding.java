// Generated by view binder compiler. Do not edit!
package brite.outdoor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import brite.outdoor.R;
import brite.outdoor.ui.widgets.CustomImageButton;
import brite.outdoor.ui.widgets.SwipeToHideLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutCommentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView_;

  @NonNull
  public final CustomImageButton btnClose;

  @NonNull
  public final CustomImageButton btnCloseImage;

  @NonNull
  public final CustomImageButton btnCloseImageReply;

  @NonNull
  public final CustomImageButton btnCloseReply;

  @NonNull
  public final ImageView btnImage;

  @NonNull
  public final ImageView btnImageReply;

  @NonNull
  public final ConstraintLayout btnSeeMoreComment;

  @NonNull
  public final ImageView btnSend;

  @NonNull
  public final ImageView btnSendReply;

  @NonNull
  public final ConstraintLayout clComment;

  @NonNull
  public final ConstraintLayout clCommentReply;

  @NonNull
  public final ConstraintLayout clEdtSendComment;

  @NonNull
  public final ConstraintLayout clEdtSendCommentReply;

  @NonNull
  public final ConstraintLayout clHeaderComment;

  @NonNull
  public final ConstraintLayout clImageView;

  @NonNull
  public final ConstraintLayout clImageViewReply;

  @NonNull
  public final ConstraintLayout clSendComment;

  @NonNull
  public final ConstraintLayout clSendCommentReply;

  @NonNull
  public final View closeRcViewImage;

  @NonNull
  public final View closeRcViewImageReply;

  @NonNull
  public final EditText edtSendComment;

  @NonNull
  public final EditText edtSendCommentReply;

  @NonNull
  public final Guideline glEnd;

  @NonNull
  public final Guideline glEndReply;

  @NonNull
  public final Guideline glStart;

  @NonNull
  public final Guideline glStartReply;

  @NonNull
  public final CustomImageButton icBackReply;

  @NonNull
  public final ImageView imgIcArrowDownComment;

  @NonNull
  public final AppCompatImageView imgView;

  @NonNull
  public final AppCompatImageView imgViewReply;

  @NonNull
  public final SwipeToHideLayout layoutBottom;

  @NonNull
  public final SwipeToHideLayout layoutBottomKeyboard;

  @NonNull
  public final SwipeToHideLayout layoutBottomReply;

  @NonNull
  public final RecyclerView rcComment;

  @NonNull
  public final RecyclerView rcCommentReply;

  @NonNull
  public final RecyclerView rcViewImage;

  @NonNull
  public final RecyclerView rcViewImageReply;

  @NonNull
  public final LinearLayout rootView;

  @NonNull
  public final TextView tvSeeMoreComment;

  @NonNull
  public final TextView tvTitleComment;

  @NonNull
  public final TextView tvTitleCommentReply;

  private LayoutCommentBinding(@NonNull LinearLayout rootView_, @NonNull CustomImageButton btnClose,
      @NonNull CustomImageButton btnCloseImage, @NonNull CustomImageButton btnCloseImageReply,
      @NonNull CustomImageButton btnCloseReply, @NonNull ImageView btnImage,
      @NonNull ImageView btnImageReply, @NonNull ConstraintLayout btnSeeMoreComment,
      @NonNull ImageView btnSend, @NonNull ImageView btnSendReply,
      @NonNull ConstraintLayout clComment, @NonNull ConstraintLayout clCommentReply,
      @NonNull ConstraintLayout clEdtSendComment, @NonNull ConstraintLayout clEdtSendCommentReply,
      @NonNull ConstraintLayout clHeaderComment, @NonNull ConstraintLayout clImageView,
      @NonNull ConstraintLayout clImageViewReply, @NonNull ConstraintLayout clSendComment,
      @NonNull ConstraintLayout clSendCommentReply, @NonNull View closeRcViewImage,
      @NonNull View closeRcViewImageReply, @NonNull EditText edtSendComment,
      @NonNull EditText edtSendCommentReply, @NonNull Guideline glEnd,
      @NonNull Guideline glEndReply, @NonNull Guideline glStart, @NonNull Guideline glStartReply,
      @NonNull CustomImageButton icBackReply, @NonNull ImageView imgIcArrowDownComment,
      @NonNull AppCompatImageView imgView, @NonNull AppCompatImageView imgViewReply,
      @NonNull SwipeToHideLayout layoutBottom, @NonNull SwipeToHideLayout layoutBottomKeyboard,
      @NonNull SwipeToHideLayout layoutBottomReply, @NonNull RecyclerView rcComment,
      @NonNull RecyclerView rcCommentReply, @NonNull RecyclerView rcViewImage,
      @NonNull RecyclerView rcViewImageReply, @NonNull LinearLayout rootView,
      @NonNull TextView tvSeeMoreComment, @NonNull TextView tvTitleComment,
      @NonNull TextView tvTitleCommentReply) {
    this.rootView_ = rootView_;
    this.btnClose = btnClose;
    this.btnCloseImage = btnCloseImage;
    this.btnCloseImageReply = btnCloseImageReply;
    this.btnCloseReply = btnCloseReply;
    this.btnImage = btnImage;
    this.btnImageReply = btnImageReply;
    this.btnSeeMoreComment = btnSeeMoreComment;
    this.btnSend = btnSend;
    this.btnSendReply = btnSendReply;
    this.clComment = clComment;
    this.clCommentReply = clCommentReply;
    this.clEdtSendComment = clEdtSendComment;
    this.clEdtSendCommentReply = clEdtSendCommentReply;
    this.clHeaderComment = clHeaderComment;
    this.clImageView = clImageView;
    this.clImageViewReply = clImageViewReply;
    this.clSendComment = clSendComment;
    this.clSendCommentReply = clSendCommentReply;
    this.closeRcViewImage = closeRcViewImage;
    this.closeRcViewImageReply = closeRcViewImageReply;
    this.edtSendComment = edtSendComment;
    this.edtSendCommentReply = edtSendCommentReply;
    this.glEnd = glEnd;
    this.glEndReply = glEndReply;
    this.glStart = glStart;
    this.glStartReply = glStartReply;
    this.icBackReply = icBackReply;
    this.imgIcArrowDownComment = imgIcArrowDownComment;
    this.imgView = imgView;
    this.imgViewReply = imgViewReply;
    this.layoutBottom = layoutBottom;
    this.layoutBottomKeyboard = layoutBottomKeyboard;
    this.layoutBottomReply = layoutBottomReply;
    this.rcComment = rcComment;
    this.rcCommentReply = rcCommentReply;
    this.rcViewImage = rcViewImage;
    this.rcViewImageReply = rcViewImageReply;
    this.rootView = rootView;
    this.tvSeeMoreComment = tvSeeMoreComment;
    this.tvTitleComment = tvTitleComment;
    this.tvTitleCommentReply = tvTitleCommentReply;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView_;
  }

  @NonNull
  public static LayoutCommentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutCommentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_comment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutCommentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnClose;
      CustomImageButton btnClose = rootView.findViewById(id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btnCloseImage;
      CustomImageButton btnCloseImage = rootView.findViewById(id);
      if (btnCloseImage == null) {
        break missingId;
      }

      id = R.id.btnCloseImageReply;
      CustomImageButton btnCloseImageReply = rootView.findViewById(id);
      if (btnCloseImageReply == null) {
        break missingId;
      }

      id = R.id.btnCloseReply;
      CustomImageButton btnCloseReply = rootView.findViewById(id);
      if (btnCloseReply == null) {
        break missingId;
      }

      id = R.id.btnImage;
      ImageView btnImage = rootView.findViewById(id);
      if (btnImage == null) {
        break missingId;
      }

      id = R.id.btnImageReply;
      ImageView btnImageReply = rootView.findViewById(id);
      if (btnImageReply == null) {
        break missingId;
      }

      id = R.id.btnSeeMoreComment;
      ConstraintLayout btnSeeMoreComment = rootView.findViewById(id);
      if (btnSeeMoreComment == null) {
        break missingId;
      }

      id = R.id.btnSend;
      ImageView btnSend = rootView.findViewById(id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.btnSendReply;
      ImageView btnSendReply = rootView.findViewById(id);
      if (btnSendReply == null) {
        break missingId;
      }

      id = R.id.clComment;
      ConstraintLayout clComment = rootView.findViewById(id);
      if (clComment == null) {
        break missingId;
      }

      id = R.id.clCommentReply;
      ConstraintLayout clCommentReply = rootView.findViewById(id);
      if (clCommentReply == null) {
        break missingId;
      }

      id = R.id.clEdtSendComment;
      ConstraintLayout clEdtSendComment = rootView.findViewById(id);
      if (clEdtSendComment == null) {
        break missingId;
      }

      id = R.id.clEdtSendCommentReply;
      ConstraintLayout clEdtSendCommentReply = rootView.findViewById(id);
      if (clEdtSendCommentReply == null) {
        break missingId;
      }

      id = R.id.clHeaderComment;
      ConstraintLayout clHeaderComment = rootView.findViewById(id);
      if (clHeaderComment == null) {
        break missingId;
      }

      id = R.id.clImageView;
      ConstraintLayout clImageView = rootView.findViewById(id);
      if (clImageView == null) {
        break missingId;
      }

      id = R.id.clImageViewReply;
      ConstraintLayout clImageViewReply = rootView.findViewById(id);
      if (clImageViewReply == null) {
        break missingId;
      }

      id = R.id.clSendComment;
      ConstraintLayout clSendComment = rootView.findViewById(id);
      if (clSendComment == null) {
        break missingId;
      }

      id = R.id.clSendCommentReply;
      ConstraintLayout clSendCommentReply = rootView.findViewById(id);
      if (clSendCommentReply == null) {
        break missingId;
      }

      id = R.id.closeRcViewImage;
      View closeRcViewImage = rootView.findViewById(id);
      if (closeRcViewImage == null) {
        break missingId;
      }

      id = R.id.closeRcViewImageReply;
      View closeRcViewImageReply = rootView.findViewById(id);
      if (closeRcViewImageReply == null) {
        break missingId;
      }

      id = R.id.edtSendComment;
      EditText edtSendComment = rootView.findViewById(id);
      if (edtSendComment == null) {
        break missingId;
      }

      id = R.id.edtSendCommentReply;
      EditText edtSendCommentReply = rootView.findViewById(id);
      if (edtSendCommentReply == null) {
        break missingId;
      }

      id = R.id.glEnd;
      Guideline glEnd = rootView.findViewById(id);
      if (glEnd == null) {
        break missingId;
      }

      id = R.id.glEndReply;
      Guideline glEndReply = rootView.findViewById(id);
      if (glEndReply == null) {
        break missingId;
      }

      id = R.id.glStart;
      Guideline glStart = rootView.findViewById(id);
      if (glStart == null) {
        break missingId;
      }

      id = R.id.glStartReply;
      Guideline glStartReply = rootView.findViewById(id);
      if (glStartReply == null) {
        break missingId;
      }

      id = R.id.icBackReply;
      CustomImageButton icBackReply = rootView.findViewById(id);
      if (icBackReply == null) {
        break missingId;
      }

      id = R.id.imgIcArrowDownComment;
      ImageView imgIcArrowDownComment = rootView.findViewById(id);
      if (imgIcArrowDownComment == null) {
        break missingId;
      }

      id = R.id.imgView;
      AppCompatImageView imgView = rootView.findViewById(id);
      if (imgView == null) {
        break missingId;
      }

      id = R.id.imgViewReply;
      AppCompatImageView imgViewReply = rootView.findViewById(id);
      if (imgViewReply == null) {
        break missingId;
      }

      id = R.id.layout_bottom;
      SwipeToHideLayout layoutBottom = rootView.findViewById(id);
      if (layoutBottom == null) {
        break missingId;
      }

      id = R.id.layout_bottom_keyboard;
      SwipeToHideLayout layoutBottomKeyboard = rootView.findViewById(id);
      if (layoutBottomKeyboard == null) {
        break missingId;
      }

      id = R.id.layout_bottomReply;
      SwipeToHideLayout layoutBottomReply = rootView.findViewById(id);
      if (layoutBottomReply == null) {
        break missingId;
      }

      id = R.id.rcComment;
      RecyclerView rcComment = rootView.findViewById(id);
      if (rcComment == null) {
        break missingId;
      }

      id = R.id.rcCommentReply;
      RecyclerView rcCommentReply = rootView.findViewById(id);
      if (rcCommentReply == null) {
        break missingId;
      }

      id = R.id.rcViewImage;
      RecyclerView rcViewImage = rootView.findViewById(id);
      if (rcViewImage == null) {
        break missingId;
      }

      id = R.id.rcViewImageReply;
      RecyclerView rcViewImageReply = rootView.findViewById(id);
      if (rcViewImageReply == null) {
        break missingId;
      }

      LinearLayout rootView_ = (LinearLayout) rootView;

      id = R.id.tvSeeMoreComment;
      TextView tvSeeMoreComment = rootView.findViewById(id);
      if (tvSeeMoreComment == null) {
        break missingId;
      }

      id = R.id.tvTitleComment;
      TextView tvTitleComment = rootView.findViewById(id);
      if (tvTitleComment == null) {
        break missingId;
      }

      id = R.id.tvTitleCommentReply;
      TextView tvTitleCommentReply = rootView.findViewById(id);
      if (tvTitleCommentReply == null) {
        break missingId;
      }

      return new LayoutCommentBinding((LinearLayout) rootView, btnClose, btnCloseImage,
          btnCloseImageReply, btnCloseReply, btnImage, btnImageReply, btnSeeMoreComment, btnSend,
          btnSendReply, clComment, clCommentReply, clEdtSendComment, clEdtSendCommentReply,
          clHeaderComment, clImageView, clImageViewReply, clSendComment, clSendCommentReply,
          closeRcViewImage, closeRcViewImageReply, edtSendComment, edtSendCommentReply, glEnd,
          glEndReply, glStart, glStartReply, icBackReply, imgIcArrowDownComment, imgView,
          imgViewReply, layoutBottom, layoutBottomKeyboard, layoutBottomReply, rcComment,
          rcCommentReply, rcViewImage, rcViewImageReply, rootView_, tvSeeMoreComment,
          tvTitleComment, tvTitleCommentReply);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
