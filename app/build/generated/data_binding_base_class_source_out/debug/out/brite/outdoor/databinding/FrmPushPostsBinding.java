// Generated by view binder compiler. Do not edit!
package brite.outdoor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import brite.outdoor.R;
import brite.outdoor.ui.widgets.CustomImageButton;
import brite.outdoor.ui.widgets.LimitedEditText;
import brite.outdoor.ui.widgets.SwipeToHideLayout;
import brite.outdoor.utils.AutoShrinkTextView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FrmPushPostsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout btnAddLocate;

  @NonNull
  public final AppCompatImageView btnBack;

  @NonNull
  public final TextView btnDangBai;

  @NonNull
  public final ConstraintLayout clTopNav;

  @NonNull
  public final LimitedEditText edtTitle;

  @NonNull
  public final ConstraintLayout frmRoot;

  @NonNull
  public final Guideline glEndContent;

  @NonNull
  public final Guideline glEndToolBarContent;

  @NonNull
  public final Guideline glStartContent;

  @NonNull
  public final ImageView icPlace;

  @NonNull
  public final CustomImageButton imgAddContent;

  @NonNull
  public final CircleImageView imgAvatar;

  @NonNull
  public final SwipeToHideLayout keyboard;

  @NonNull
  public final RelativeLayout rlAddContent;

  @NonNull
  public final ConstraintLayout rlContent;

  @NonNull
  public final RecyclerView rvPostContents;

  @NonNull
  public final TextView tvAdd;

  @NonNull
  public final TextView tvLatAndLng;

  @NonNull
  public final AutoShrinkTextView tvTopNavTitle;

  private FrmPushPostsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout btnAddLocate, @NonNull AppCompatImageView btnBack,
      @NonNull TextView btnDangBai, @NonNull ConstraintLayout clTopNav,
      @NonNull LimitedEditText edtTitle, @NonNull ConstraintLayout frmRoot,
      @NonNull Guideline glEndContent, @NonNull Guideline glEndToolBarContent,
      @NonNull Guideline glStartContent, @NonNull ImageView icPlace,
      @NonNull CustomImageButton imgAddContent, @NonNull CircleImageView imgAvatar,
      @NonNull SwipeToHideLayout keyboard, @NonNull RelativeLayout rlAddContent,
      @NonNull ConstraintLayout rlContent, @NonNull RecyclerView rvPostContents,
      @NonNull TextView tvAdd, @NonNull TextView tvLatAndLng,
      @NonNull AutoShrinkTextView tvTopNavTitle) {
    this.rootView = rootView;
    this.btnAddLocate = btnAddLocate;
    this.btnBack = btnBack;
    this.btnDangBai = btnDangBai;
    this.clTopNav = clTopNav;
    this.edtTitle = edtTitle;
    this.frmRoot = frmRoot;
    this.glEndContent = glEndContent;
    this.glEndToolBarContent = glEndToolBarContent;
    this.glStartContent = glStartContent;
    this.icPlace = icPlace;
    this.imgAddContent = imgAddContent;
    this.imgAvatar = imgAvatar;
    this.keyboard = keyboard;
    this.rlAddContent = rlAddContent;
    this.rlContent = rlContent;
    this.rvPostContents = rvPostContents;
    this.tvAdd = tvAdd;
    this.tvLatAndLng = tvLatAndLng;
    this.tvTopNavTitle = tvTopNavTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FrmPushPostsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FrmPushPostsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.frm_push_posts, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FrmPushPostsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddLocate;
      ConstraintLayout btnAddLocate = rootView.findViewById(id);
      if (btnAddLocate == null) {
        break missingId;
      }

      id = R.id.btnBack;
      AppCompatImageView btnBack = rootView.findViewById(id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnDangBai;
      TextView btnDangBai = rootView.findViewById(id);
      if (btnDangBai == null) {
        break missingId;
      }

      id = R.id.clTopNav;
      ConstraintLayout clTopNav = rootView.findViewById(id);
      if (clTopNav == null) {
        break missingId;
      }

      id = R.id.edtTitle;
      LimitedEditText edtTitle = rootView.findViewById(id);
      if (edtTitle == null) {
        break missingId;
      }

      ConstraintLayout frmRoot = (ConstraintLayout) rootView;

      id = R.id.glEndContent;
      Guideline glEndContent = rootView.findViewById(id);
      if (glEndContent == null) {
        break missingId;
      }

      id = R.id.glEndToolBarContent;
      Guideline glEndToolBarContent = rootView.findViewById(id);
      if (glEndToolBarContent == null) {
        break missingId;
      }

      id = R.id.glStartContent;
      Guideline glStartContent = rootView.findViewById(id);
      if (glStartContent == null) {
        break missingId;
      }

      id = R.id.icPlace;
      ImageView icPlace = rootView.findViewById(id);
      if (icPlace == null) {
        break missingId;
      }

      id = R.id.imgAddContent;
      CustomImageButton imgAddContent = rootView.findViewById(id);
      if (imgAddContent == null) {
        break missingId;
      }

      id = R.id.imgAvatar;
      CircleImageView imgAvatar = rootView.findViewById(id);
      if (imgAvatar == null) {
        break missingId;
      }

      id = R.id.keyboard;
      SwipeToHideLayout keyboard = rootView.findViewById(id);
      if (keyboard == null) {
        break missingId;
      }

      id = R.id.rlAddContent;
      RelativeLayout rlAddContent = rootView.findViewById(id);
      if (rlAddContent == null) {
        break missingId;
      }

      id = R.id.rlContent;
      ConstraintLayout rlContent = rootView.findViewById(id);
      if (rlContent == null) {
        break missingId;
      }

      id = R.id.rvPostContents;
      RecyclerView rvPostContents = rootView.findViewById(id);
      if (rvPostContents == null) {
        break missingId;
      }

      id = R.id.tvAdd;
      TextView tvAdd = rootView.findViewById(id);
      if (tvAdd == null) {
        break missingId;
      }

      id = R.id.tvLatAndLng;
      TextView tvLatAndLng = rootView.findViewById(id);
      if (tvLatAndLng == null) {
        break missingId;
      }

      id = R.id.tvTopNavTitle;
      AutoShrinkTextView tvTopNavTitle = rootView.findViewById(id);
      if (tvTopNavTitle == null) {
        break missingId;
      }

      return new FrmPushPostsBinding((ConstraintLayout) rootView, btnAddLocate, btnBack, btnDangBai,
          clTopNav, edtTitle, frmRoot, glEndContent, glEndToolBarContent, glStartContent, icPlace,
          imgAddContent, imgAvatar, keyboard, rlAddContent, rlContent, rvPostContents, tvAdd,
          tvLatAndLng, tvTopNavTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
