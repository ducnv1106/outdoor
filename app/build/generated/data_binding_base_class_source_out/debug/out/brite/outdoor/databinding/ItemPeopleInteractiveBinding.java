// Generated by view binder compiler. Do not edit!
package brite.outdoor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import brite.outdoor.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPeopleInteractiveBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView btnFollow;

  @NonNull
  public final CardView clItemPeopleInteractive;

  @NonNull
  public final ConstraintLayout clPeopleInteractive;

  @NonNull
  public final ImageView imgAvatar;

  @NonNull
  public final TextView tvName;

  private ItemPeopleInteractiveBinding(@NonNull CardView rootView, @NonNull TextView btnFollow,
      @NonNull CardView clItemPeopleInteractive, @NonNull ConstraintLayout clPeopleInteractive,
      @NonNull ImageView imgAvatar, @NonNull TextView tvName) {
    this.rootView = rootView;
    this.btnFollow = btnFollow;
    this.clItemPeopleInteractive = clItemPeopleInteractive;
    this.clPeopleInteractive = clPeopleInteractive;
    this.imgAvatar = imgAvatar;
    this.tvName = tvName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPeopleInteractiveBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPeopleInteractiveBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_people_interactive, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPeopleInteractiveBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnFollow;
      TextView btnFollow = rootView.findViewById(id);
      if (btnFollow == null) {
        break missingId;
      }

      CardView clItemPeopleInteractive = (CardView) rootView;

      id = R.id.clPeopleInteractive;
      ConstraintLayout clPeopleInteractive = rootView.findViewById(id);
      if (clPeopleInteractive == null) {
        break missingId;
      }

      id = R.id.imgAvatar;
      ImageView imgAvatar = rootView.findViewById(id);
      if (imgAvatar == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = rootView.findViewById(id);
      if (tvName == null) {
        break missingId;
      }

      return new ItemPeopleInteractiveBinding((CardView) rootView, btnFollow,
          clItemPeopleInteractive, clPeopleInteractive, imgAvatar, tvName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
