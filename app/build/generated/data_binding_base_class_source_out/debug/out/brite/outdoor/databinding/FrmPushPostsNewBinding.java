// Generated by view binder compiler. Do not edit!
package brite.outdoor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import brite.outdoor.R;
import brite.outdoor.ui.widgets.CustomImageButton;
import brite.outdoor.ui.widgets.LimitedEditText;
import brite.outdoor.ui.widgets.SwipeToHideLayout;
import brite.outdoor.utils.AutoShrinkTextView;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FrmPushPostsNewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final AppCompatImageView btnBack;

  @NonNull
  public final ImageButton btnCloseImage;

  @NonNull
  public final CustomImageButton btnPushPost;

  @NonNull
  public final ConstraintLayout clImgAvatar;

  @NonNull
  public final ConstraintLayout clTopNav;

  @NonNull
  public final LimitedEditText edtTitle;

  @NonNull
  public final ConstraintLayout frmRoot;

  @NonNull
  public final Guideline glEndContent;

  @NonNull
  public final Guideline glEndToolBarContent;

  @NonNull
  public final Guideline glStartContent;

  @NonNull
  public final Guideline glStartToolBarContent;

  @NonNull
  public final ImageView imgAvatar;

  @NonNull
  public final ImageView imgAvatarDefault;

  @NonNull
  public final ImageView imgBlock;

  @NonNull
  public final ImageView imgLocation;

  @NonNull
  public final SwipeToHideLayout keyboard;

  @NonNull
  public final ConstraintLayout rlAvatar;

  @NonNull
  public final ConstraintLayout rlContent;

  @NonNull
  public final LinearLayout rlLocation;

  @NonNull
  public final RecyclerView rvPostContents;

  @NonNull
  public final CoordinatorLayout scrollView;

  @NonNull
  public final TextView tvAvatar;

  @NonNull
  public final TextView tvAvatarErr;

  @NonNull
  public final TextView tvContentErr;

  @NonNull
  public final AppCompatTextView tvLocationOrUtensil;

  @NonNull
  public final TextView tvLocationOrUtensilErr;

  @NonNull
  public final TextView tvTitleErr;

  @NonNull
  public final AutoShrinkTextView tvTopNavTitle;

  @NonNull
  public final TextView tvUpload;

  private FrmPushPostsNewBinding(@NonNull ConstraintLayout rootView, @NonNull AppBarLayout appBar,
      @NonNull AppCompatImageView btnBack, @NonNull ImageButton btnCloseImage,
      @NonNull CustomImageButton btnPushPost, @NonNull ConstraintLayout clImgAvatar,
      @NonNull ConstraintLayout clTopNav, @NonNull LimitedEditText edtTitle,
      @NonNull ConstraintLayout frmRoot, @NonNull Guideline glEndContent,
      @NonNull Guideline glEndToolBarContent, @NonNull Guideline glStartContent,
      @NonNull Guideline glStartToolBarContent, @NonNull ImageView imgAvatar,
      @NonNull ImageView imgAvatarDefault, @NonNull ImageView imgBlock,
      @NonNull ImageView imgLocation, @NonNull SwipeToHideLayout keyboard,
      @NonNull ConstraintLayout rlAvatar, @NonNull ConstraintLayout rlContent,
      @NonNull LinearLayout rlLocation, @NonNull RecyclerView rvPostContents,
      @NonNull CoordinatorLayout scrollView, @NonNull TextView tvAvatar,
      @NonNull TextView tvAvatarErr, @NonNull TextView tvContentErr,
      @NonNull AppCompatTextView tvLocationOrUtensil, @NonNull TextView tvLocationOrUtensilErr,
      @NonNull TextView tvTitleErr, @NonNull AutoShrinkTextView tvTopNavTitle,
      @NonNull TextView tvUpload) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.btnBack = btnBack;
    this.btnCloseImage = btnCloseImage;
    this.btnPushPost = btnPushPost;
    this.clImgAvatar = clImgAvatar;
    this.clTopNav = clTopNav;
    this.edtTitle = edtTitle;
    this.frmRoot = frmRoot;
    this.glEndContent = glEndContent;
    this.glEndToolBarContent = glEndToolBarContent;
    this.glStartContent = glStartContent;
    this.glStartToolBarContent = glStartToolBarContent;
    this.imgAvatar = imgAvatar;
    this.imgAvatarDefault = imgAvatarDefault;
    this.imgBlock = imgBlock;
    this.imgLocation = imgLocation;
    this.keyboard = keyboard;
    this.rlAvatar = rlAvatar;
    this.rlContent = rlContent;
    this.rlLocation = rlLocation;
    this.rvPostContents = rvPostContents;
    this.scrollView = scrollView;
    this.tvAvatar = tvAvatar;
    this.tvAvatarErr = tvAvatarErr;
    this.tvContentErr = tvContentErr;
    this.tvLocationOrUtensil = tvLocationOrUtensil;
    this.tvLocationOrUtensilErr = tvLocationOrUtensilErr;
    this.tvTitleErr = tvTitleErr;
    this.tvTopNavTitle = tvTopNavTitle;
    this.tvUpload = tvUpload;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FrmPushPostsNewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FrmPushPostsNewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.frm_push_posts_new, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FrmPushPostsNewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBar;
      AppBarLayout appBar = rootView.findViewById(id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.btnBack;
      AppCompatImageView btnBack = rootView.findViewById(id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnCloseImage;
      ImageButton btnCloseImage = rootView.findViewById(id);
      if (btnCloseImage == null) {
        break missingId;
      }

      id = R.id.btnPushPost;
      CustomImageButton btnPushPost = rootView.findViewById(id);
      if (btnPushPost == null) {
        break missingId;
      }

      id = R.id.clImgAvatar;
      ConstraintLayout clImgAvatar = rootView.findViewById(id);
      if (clImgAvatar == null) {
        break missingId;
      }

      id = R.id.clTopNav;
      ConstraintLayout clTopNav = rootView.findViewById(id);
      if (clTopNav == null) {
        break missingId;
      }

      id = R.id.edtTitle;
      LimitedEditText edtTitle = rootView.findViewById(id);
      if (edtTitle == null) {
        break missingId;
      }

      ConstraintLayout frmRoot = (ConstraintLayout) rootView;

      id = R.id.glEndContent;
      Guideline glEndContent = rootView.findViewById(id);
      if (glEndContent == null) {
        break missingId;
      }

      id = R.id.glEndToolBarContent;
      Guideline glEndToolBarContent = rootView.findViewById(id);
      if (glEndToolBarContent == null) {
        break missingId;
      }

      id = R.id.glStartContent;
      Guideline glStartContent = rootView.findViewById(id);
      if (glStartContent == null) {
        break missingId;
      }

      id = R.id.glStartToolBarContent;
      Guideline glStartToolBarContent = rootView.findViewById(id);
      if (glStartToolBarContent == null) {
        break missingId;
      }

      id = R.id.imgAvatar;
      ImageView imgAvatar = rootView.findViewById(id);
      if (imgAvatar == null) {
        break missingId;
      }

      id = R.id.imgAvatarDefault;
      ImageView imgAvatarDefault = rootView.findViewById(id);
      if (imgAvatarDefault == null) {
        break missingId;
      }

      id = R.id.imgBlock;
      ImageView imgBlock = rootView.findViewById(id);
      if (imgBlock == null) {
        break missingId;
      }

      id = R.id.imgLocation;
      ImageView imgLocation = rootView.findViewById(id);
      if (imgLocation == null) {
        break missingId;
      }

      id = R.id.keyboard;
      SwipeToHideLayout keyboard = rootView.findViewById(id);
      if (keyboard == null) {
        break missingId;
      }

      id = R.id.rlAvatar;
      ConstraintLayout rlAvatar = rootView.findViewById(id);
      if (rlAvatar == null) {
        break missingId;
      }

      id = R.id.rlContent;
      ConstraintLayout rlContent = rootView.findViewById(id);
      if (rlContent == null) {
        break missingId;
      }

      id = R.id.rlLocation;
      LinearLayout rlLocation = rootView.findViewById(id);
      if (rlLocation == null) {
        break missingId;
      }

      id = R.id.rvPostContents;
      RecyclerView rvPostContents = rootView.findViewById(id);
      if (rvPostContents == null) {
        break missingId;
      }

      id = R.id.scrollView;
      CoordinatorLayout scrollView = rootView.findViewById(id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.tvAvatar;
      TextView tvAvatar = rootView.findViewById(id);
      if (tvAvatar == null) {
        break missingId;
      }

      id = R.id.tvAvatarErr;
      TextView tvAvatarErr = rootView.findViewById(id);
      if (tvAvatarErr == null) {
        break missingId;
      }

      id = R.id.tvContentErr;
      TextView tvContentErr = rootView.findViewById(id);
      if (tvContentErr == null) {
        break missingId;
      }

      id = R.id.tvLocationOrUtensil;
      AppCompatTextView tvLocationOrUtensil = rootView.findViewById(id);
      if (tvLocationOrUtensil == null) {
        break missingId;
      }

      id = R.id.tvLocationOrUtensilErr;
      TextView tvLocationOrUtensilErr = rootView.findViewById(id);
      if (tvLocationOrUtensilErr == null) {
        break missingId;
      }

      id = R.id.tvTitleErr;
      TextView tvTitleErr = rootView.findViewById(id);
      if (tvTitleErr == null) {
        break missingId;
      }

      id = R.id.tvTopNavTitle;
      AutoShrinkTextView tvTopNavTitle = rootView.findViewById(id);
      if (tvTopNavTitle == null) {
        break missingId;
      }

      id = R.id.tvUpload;
      TextView tvUpload = rootView.findViewById(id);
      if (tvUpload == null) {
        break missingId;
      }

      return new FrmPushPostsNewBinding((ConstraintLayout) rootView, appBar, btnBack, btnCloseImage,
          btnPushPost, clImgAvatar, clTopNav, edtTitle, frmRoot, glEndContent, glEndToolBarContent,
          glStartContent, glStartToolBarContent, imgAvatar, imgAvatarDefault, imgBlock, imgLocation,
          keyboard, rlAvatar, rlContent, rlLocation, rvPostContents, scrollView, tvAvatar,
          tvAvatarErr, tvContentErr, tvLocationOrUtensil, tvLocationOrUtensilErr, tvTitleErr,
          tvTopNavTitle, tvUpload);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
