// Generated by data binding compiler. Do not edit!
package brite.outdoor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import brite.outdoor.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActMainNewBinding extends ViewDataBinding {
  @NonNull
  public final FrameLayout flContainerDetail;

  @NonNull
  public final FrameLayout flContainerFuncChild;

  @NonNull
  public final FrameLayout flContainerFuncChildLanguage;

  @NonNull
  public final FrameLayout flContainerListPeopleInteractive;

  @NonNull
  public final FrameLayout flContainerMain;

  @NonNull
  public final FrameLayout flContainerMainFunc;

  @NonNull
  public final FrameLayout flContainerPersonalPage;

  @NonNull
  public final FrameLayout flContainerSetting;

  protected ActMainNewBinding(Object _bindingComponent, View _root, int _localFieldCount,
      FrameLayout flContainerDetail, FrameLayout flContainerFuncChild,
      FrameLayout flContainerFuncChildLanguage, FrameLayout flContainerListPeopleInteractive,
      FrameLayout flContainerMain, FrameLayout flContainerMainFunc,
      FrameLayout flContainerPersonalPage, FrameLayout flContainerSetting) {
    super(_bindingComponent, _root, _localFieldCount);
    this.flContainerDetail = flContainerDetail;
    this.flContainerFuncChild = flContainerFuncChild;
    this.flContainerFuncChildLanguage = flContainerFuncChildLanguage;
    this.flContainerListPeopleInteractive = flContainerListPeopleInteractive;
    this.flContainerMain = flContainerMain;
    this.flContainerMainFunc = flContainerMainFunc;
    this.flContainerPersonalPage = flContainerPersonalPage;
    this.flContainerSetting = flContainerSetting;
  }

  @NonNull
  public static ActMainNewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.act_main_new, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActMainNewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActMainNewBinding>inflateInternal(inflater, R.layout.act_main_new, root, attachToRoot, component);
  }

  @NonNull
  public static ActMainNewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.act_main_new, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActMainNewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActMainNewBinding>inflateInternal(inflater, R.layout.act_main_new, null, false, component);
  }

  public static ActMainNewBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActMainNewBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActMainNewBinding)bind(component, view, R.layout.act_main_new);
  }
}
