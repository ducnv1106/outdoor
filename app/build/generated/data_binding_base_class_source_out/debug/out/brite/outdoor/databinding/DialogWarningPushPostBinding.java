// Generated by view binder compiler. Do not edit!
package brite.outdoor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import brite.outdoor.R;
import brite.outdoor.ui.widgets.NoPaddingTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogWarningPushPostBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView btnClose;

  @NonNull
  public final AppCompatImageView imgWarning;

  @NonNull
  public final LinearLayout layoutResult;

  @NonNull
  public final NoPaddingTextView numberResult;

  @NonNull
  public final RelativeLayout rlContent;

  @NonNull
  public final ConstraintLayout rlRoot;

  @NonNull
  public final RelativeLayout title;

  @NonNull
  public final TextView tvMaximumPhotoVideo;

  @NonNull
  public final NoPaddingTextView tvNumberPhoto;

  @NonNull
  public final NoPaddingTextView tvNumberVideo;

  @NonNull
  public final NoPaddingTextView tvResult;

  @NonNull
  public final View viewFooter;

  private DialogWarningPushPostBinding(@NonNull RelativeLayout rootView, @NonNull TextView btnClose,
      @NonNull AppCompatImageView imgWarning, @NonNull LinearLayout layoutResult,
      @NonNull NoPaddingTextView numberResult, @NonNull RelativeLayout rlContent,
      @NonNull ConstraintLayout rlRoot, @NonNull RelativeLayout title,
      @NonNull TextView tvMaximumPhotoVideo, @NonNull NoPaddingTextView tvNumberPhoto,
      @NonNull NoPaddingTextView tvNumberVideo, @NonNull NoPaddingTextView tvResult,
      @NonNull View viewFooter) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.imgWarning = imgWarning;
    this.layoutResult = layoutResult;
    this.numberResult = numberResult;
    this.rlContent = rlContent;
    this.rlRoot = rlRoot;
    this.title = title;
    this.tvMaximumPhotoVideo = tvMaximumPhotoVideo;
    this.tvNumberPhoto = tvNumberPhoto;
    this.tvNumberVideo = tvNumberVideo;
    this.tvResult = tvResult;
    this.viewFooter = viewFooter;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogWarningPushPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogWarningPushPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_warning_push_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogWarningPushPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnClose;
      TextView btnClose = rootView.findViewById(id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.img_warning;
      AppCompatImageView imgWarning = rootView.findViewById(id);
      if (imgWarning == null) {
        break missingId;
      }

      id = R.id.layoutResult;
      LinearLayout layoutResult = rootView.findViewById(id);
      if (layoutResult == null) {
        break missingId;
      }

      id = R.id.numberResult;
      NoPaddingTextView numberResult = rootView.findViewById(id);
      if (numberResult == null) {
        break missingId;
      }

      RelativeLayout rlContent = (RelativeLayout) rootView;

      id = R.id.rlRoot;
      ConstraintLayout rlRoot = rootView.findViewById(id);
      if (rlRoot == null) {
        break missingId;
      }

      id = R.id.title;
      RelativeLayout title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      id = R.id.tvMaximumPhotoVideo;
      TextView tvMaximumPhotoVideo = rootView.findViewById(id);
      if (tvMaximumPhotoVideo == null) {
        break missingId;
      }

      id = R.id.tvNumberPhoto;
      NoPaddingTextView tvNumberPhoto = rootView.findViewById(id);
      if (tvNumberPhoto == null) {
        break missingId;
      }

      id = R.id.tvNumberVideo;
      NoPaddingTextView tvNumberVideo = rootView.findViewById(id);
      if (tvNumberVideo == null) {
        break missingId;
      }

      id = R.id.tvResult;
      NoPaddingTextView tvResult = rootView.findViewById(id);
      if (tvResult == null) {
        break missingId;
      }

      id = R.id.viewFooter;
      View viewFooter = rootView.findViewById(id);
      if (viewFooter == null) {
        break missingId;
      }

      return new DialogWarningPushPostBinding((RelativeLayout) rootView, btnClose, imgWarning,
          layoutResult, numberResult, rlContent, rlRoot, title, tvMaximumPhotoVideo, tvNumberPhoto,
          tvNumberVideo, tvResult, viewFooter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
