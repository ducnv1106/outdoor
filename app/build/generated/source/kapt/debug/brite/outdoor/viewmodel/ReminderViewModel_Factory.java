// Generated by Dagger (https://dagger.dev).
package brite.outdoor.viewmodel;

import android.app.Application;
import brite.outdoor.data.remote.ApiController;
import brite.outdoor.data.repository.AppRepository;
import com.google.gson.Gson;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ReminderViewModel_Factory implements Factory<ReminderViewModel> {
  private final Provider<Gson> gsonProvider;

  private final Provider<ApiController> apiControllerProvider;

  private final Provider<AppRepository> repositoryProvider;

  private final Provider<Application> appProvider;

  public ReminderViewModel_Factory(Provider<Gson> gsonProvider,
      Provider<ApiController> apiControllerProvider, Provider<AppRepository> repositoryProvider,
      Provider<Application> appProvider) {
    this.gsonProvider = gsonProvider;
    this.apiControllerProvider = apiControllerProvider;
    this.repositoryProvider = repositoryProvider;
    this.appProvider = appProvider;
  }

  @Override
  public ReminderViewModel get() {
    return newInstance(gsonProvider.get(), apiControllerProvider.get(), repositoryProvider.get(), appProvider.get());
  }

  public static ReminderViewModel_Factory create(Provider<Gson> gsonProvider,
      Provider<ApiController> apiControllerProvider, Provider<AppRepository> repositoryProvider,
      Provider<Application> appProvider) {
    return new ReminderViewModel_Factory(gsonProvider, apiControllerProvider, repositoryProvider, appProvider);
  }

  public static ReminderViewModel newInstance(Gson gson, ApiController apiController,
      AppRepository repository, Application app) {
    return new ReminderViewModel(gson, apiController, repository, app);
  }
}
