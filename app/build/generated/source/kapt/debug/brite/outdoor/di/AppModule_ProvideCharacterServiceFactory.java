// Generated by Dagger (https://dagger.dev).
package brite.outdoor.di;

import brite.outdoor.data.remote.CallApiService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideCharacterServiceFactory implements Factory<CallApiService> {
  private final Provider<Retrofit> retrofitProvider;

  public AppModule_ProvideCharacterServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public CallApiService get() {
    return provideCharacterService(retrofitProvider.get());
  }

  public static AppModule_ProvideCharacterServiceFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new AppModule_ProvideCharacterServiceFactory(retrofitProvider);
  }

  public static CallApiService provideCharacterService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideCharacterService(retrofit));
  }
}
