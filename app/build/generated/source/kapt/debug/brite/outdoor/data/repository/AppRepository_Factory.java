// Generated by Dagger (https://dagger.dev).
package brite.outdoor.data.repository;

import brite.outdoor.data.local.room.AppDao;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppRepository_Factory implements Factory<AppRepository> {
  private final Provider<AppDao> localDataSourceProvider;

  public AppRepository_Factory(Provider<AppDao> localDataSourceProvider) {
    this.localDataSourceProvider = localDataSourceProvider;
  }

  @Override
  public AppRepository get() {
    return newInstance(localDataSourceProvider.get());
  }

  public static AppRepository_Factory create(Provider<AppDao> localDataSourceProvider) {
    return new AppRepository_Factory(localDataSourceProvider);
  }

  public static AppRepository newInstance(AppDao localDataSource) {
    return new AppRepository(localDataSource);
  }
}
