// Generated by Dagger (https://dagger.dev).
package brite.outdoor.viewmodel;

import brite.outdoor.data.remote.ApiController;
import brite.outdoor.data.repository.AppRepository;
import com.google.gson.Gson;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PushPostViewModel_Factory implements Factory<PushPostViewModel> {
  private final Provider<AppRepository> appRepositoryProvider;

  private final Provider<ApiController> apiControllerProvider;

  private final Provider<Gson> gsonProvider;

  public PushPostViewModel_Factory(Provider<AppRepository> appRepositoryProvider,
      Provider<ApiController> apiControllerProvider, Provider<Gson> gsonProvider) {
    this.appRepositoryProvider = appRepositoryProvider;
    this.apiControllerProvider = apiControllerProvider;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public PushPostViewModel get() {
    return newInstance(appRepositoryProvider.get(), apiControllerProvider.get(), gsonProvider.get());
  }

  public static PushPostViewModel_Factory create(Provider<AppRepository> appRepositoryProvider,
      Provider<ApiController> apiControllerProvider, Provider<Gson> gsonProvider) {
    return new PushPostViewModel_Factory(appRepositoryProvider, apiControllerProvider, gsonProvider);
  }

  public static PushPostViewModel newInstance(AppRepository appRepository,
      ApiController apiController, Gson gson) {
    return new PushPostViewModel(appRepository, apiController, gson);
  }
}
