// Generated by Dagger (https://dagger.dev).
package brite.outdoor.viewmodel;

import brite.outdoor.data.remote.ApiController;
import brite.outdoor.data.repository.AppRepository;
import com.google.gson.Gson;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthViewModel_Factory implements Factory<AuthViewModel> {
  private final Provider<Gson> gsonProvider;

  private final Provider<ApiController> apiControllerProvider;

  private final Provider<AppRepository> appRepositoryProvider;

  public AuthViewModel_Factory(Provider<Gson> gsonProvider,
      Provider<ApiController> apiControllerProvider,
      Provider<AppRepository> appRepositoryProvider) {
    this.gsonProvider = gsonProvider;
    this.apiControllerProvider = apiControllerProvider;
    this.appRepositoryProvider = appRepositoryProvider;
  }

  @Override
  public AuthViewModel get() {
    return newInstance(gsonProvider.get(), apiControllerProvider.get(), appRepositoryProvider.get());
  }

  public static AuthViewModel_Factory create(Provider<Gson> gsonProvider,
      Provider<ApiController> apiControllerProvider,
      Provider<AppRepository> appRepositoryProvider) {
    return new AuthViewModel_Factory(gsonProvider, apiControllerProvider, appRepositoryProvider);
  }

  public static AuthViewModel newInstance(Gson gson, ApiController apiController,
      AppRepository appRepository) {
    return new AuthViewModel(gson, apiController, appRepository);
  }
}
