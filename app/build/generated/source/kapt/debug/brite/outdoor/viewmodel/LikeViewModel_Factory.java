// Generated by Dagger (https://dagger.dev).
package brite.outdoor.viewmodel;

import brite.outdoor.data.remote.ApiController;
import com.google.gson.Gson;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LikeViewModel_Factory implements Factory<LikeViewModel> {
  private final Provider<Gson> gsonProvider;

  private final Provider<ApiController> apiControllerProvider;

  public LikeViewModel_Factory(Provider<Gson> gsonProvider,
      Provider<ApiController> apiControllerProvider) {
    this.gsonProvider = gsonProvider;
    this.apiControllerProvider = apiControllerProvider;
  }

  @Override
  public LikeViewModel get() {
    return newInstance(gsonProvider.get(), apiControllerProvider.get());
  }

  public static LikeViewModel_Factory create(Provider<Gson> gsonProvider,
      Provider<ApiController> apiControllerProvider) {
    return new LikeViewModel_Factory(gsonProvider, apiControllerProvider);
  }

  public static LikeViewModel newInstance(Gson gson, ApiController apiController) {
    return new LikeViewModel(gson, apiController);
  }
}
